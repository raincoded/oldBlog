{"version":3,"sources":["webpack:///./node_modules/cssfilter/lib/index.js","webpack:///./node_modules/xss/lib/xss.js","webpack:///./node_modules/xss/lib/parser.js","webpack:///./node_modules/xss/lib/index.js","webpack:///./node_modules/cssfilter/lib/default.js","webpack:///./node_modules/cssfilter/lib/util.js","webpack:///./node_modules/cssfilter/lib/parser.js","webpack:///./node_modules/cssfilter/lib/css.js","webpack:///./node_modules/xss/lib/default.js","webpack:///./node_modules/xss/lib/util.js"],"names":["DEFAULT","FilterCSS","filterCSS","html","options","xss","process","i","exports","module","window","parser","parseTag","parseAttr","_","isNull","obj","undefined","getAttrs","spaceIndex","closing","length","trim","slice","isClosing","shallowCopyObject","ret","FilterXSS","stripIgnoreTag","onIgnoreTag","console","error","onIgnoreTagStripAll","whiteList","onTag","onTagAttr","onIgnoreTagAttr","safeAttrValue","escapeHtml","this","css","cssFilter","prototype","toString","me","stripBlankChar","allowCommentTag","stripCommentTag","stripIgnoreTagBody","StripTagBody","retHtml","sourcePosition","position","tag","info","isWhite","hasOwnProperty","attrs","whiteAttrList","attrsHtml","name","value","isWhiteAttr","indexOf","remove","getTagName","tagName","toLowerCase","rethtml","lastPos","tagStart","quoteStart","currentPos","len","currentTagName","currentHtml","chariterator","c","charAt","ic","substr","REGEXP_ILLEGAL_ATTR_NAME","onAttr","retAttrs","tmpName","addAttr","replace","push","v","j","test","findNextEqual","findBeforeEqual","stripQuoteWrap","join","str","isQuoteWrapString","text","filterXSS","isWorkerEnv","self","DedicatedWorkerGlobalScope","getDefaultWhiteList","onIgnoreAttr","REGEXP_URL_JAVASCRIPT","arr","item","Array","forEach","fn","scope","call","String","trimRight","parseStyle","cssLength","isParenthesisOpen","retCSS","addNewAttr","source","check","RegExp","opts","getDefaultCSSWhiteList","a","abbr","address","area","article","aside","audio","b","bdi","bdo","big","blockquote","br","caption","center","cite","code","col","colgroup","dd","del","details","div","dl","dt","em","font","footer","h1","h2","h3","h4","h5","h6","header","hr","img","ins","li","mark","nav","ol","p","pre","s","section","small","span","sub","sup","strong","table","tbody","td","tfoot","th","thead","tr","tt","u","ul","video","defaultCSSFilter","REGEXP_LT","REGEXP_GT","friendlyAttrValue","REGEXP_DEFAULT_ON_TAG_ATTR_4","lastIndex","REGEXP_DEFAULT_ON_TAG_ATTR_7","REGEXP_DEFAULT_ON_TAG_ATTR_8","escapeAttrValue","REGEXP_QUOTE","REGEXP_QUOTE_2","REGEXP_ATTR_VALUE_1","REGEXP_ATTR_VALUE_COLON","REGEXP_ATTR_VALUE_NEWLINE","escapeQuote","unescapeQuote","escapeHtmlEntities","fromCharCode","parseInt","escapeDangerHtml5Entities","clearNonPrintableCharacter","str2","charCodeAt","tags","next","isRemoveAllTag","isArray","isRemoveTag","removeList","posStart","end","pos","STRIP_COMMENT_TAG_REGEXP","chars","split","filter","char","reg","match","exec","index"],"mappings":"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","file":"js/Edit~Login~Message.8b77e31a.js","sourcesContent":["/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar FilterCSS = require('./css');\n\n\n/**\n * XSS过滤\n *\n * @param {String} css 要过滤的CSS代码\n * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr\n * @return {String}\n */\nfunction filterCSS (html, options) {\n  var xss = new FilterCSS(options);\n  return xss.process(html);\n}\n\n\n// 输出\nexports = module.exports = filterCSS;\nexports.FilterCSS = FilterCSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n// 在浏览器端使用\nif (typeof window !== 'undefined') {\n  window.filterCSS = module.exports;\n}\n","/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = require(\"./util\");\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\"\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList, onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function(html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    var stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function(sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: whiteList.hasOwnProperty(tag)\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function(name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            var ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        var html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        var ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nmodule.exports = FilterXSS;\n","/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _ = require(\"./util\");\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    var tagName = html.slice(1, -1);\n  } else {\n    var tagName = html.slice(1, i + 1);\n  }\n  tagName = _.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag(html, onTag, escapeHtml) {\n  \"use strict\";\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\") {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if ((c === '\"' || c === \"'\")) {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while ((ic === \" \") || (ic === \"=\")) {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < html.length) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9_:\\.\\-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr(html, onAttr) {\n  \"use strict\";\n\n  var lastPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastPos &&\n        (c === '\"' || c === \"'\") &&\n        html.charAt(i - 1) === \"=\"\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _.trim(html.slice(lastPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nexports.parseTag = parseTag;\nexports.parseAttr = parseAttr;\n","/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require(\"./default\");\nvar parser = require(\"./parser\");\nvar FilterXSS = require(\"./xss\");\n\n/**\n * filter xss function\n *\n * @param {String} html\n * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n * @return {String}\n */\nfunction filterXSS(html, options) {\n  var xss = new FilterXSS(options);\n  return xss.process(html);\n}\n\nexports = module.exports = filterXSS;\nexports.filterXSS = filterXSS;\nexports.FilterXSS = FilterXSS;\nfor (var i in DEFAULT) exports[i] = DEFAULT[i];\nfor (var i in parser) exports[i] = parser[i];\n\n// using `xss` on the browser, output `filterXSS` to the globals\nif (typeof window !== \"undefined\") {\n  window.filterXSS = module.exports;\n}\n\n// using `xss` on the WebWorker, output `filterXSS` to the globals\nfunction isWorkerEnv() {\n  return typeof self !== 'undefined' && typeof DedicatedWorkerGlobalScope !== 'undefined' && self instanceof DedicatedWorkerGlobalScope;\n}\nif (isWorkerEnv()) {\n  self.filterXSS = module.exports;\n}\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList () {\n  // 白名单值说明：\n  // true: 允许该属性\n  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许\n  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许\n  // 除上面列出的值外均表示不允许\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * 匹配到白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * 匹配到不在白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * 过滤属性值\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onAttr = onAttr;\nexports.onIgnoreAttr = onIgnoreAttr;\nexports.safeAttrValue = safeAttrValue;\n","module.exports = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar _ = require('./util');\n\n\n/**\n * 解析style\n *\n * @param {String} css\n * @param {Function} onAttr 处理属性的函数\n *   参数格式： function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle (css, onAttr) {\n  css = _.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // 如果没有正常的闭合圆括号，则直接忽略当前属性\n    if (!isParenthesisOpen) {\n      var source = _.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _.trim(source.slice(0, j));\n        var value = _.trim(source.slice(j + 1));\n        // 必须有属性名称\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // 备注开始\n      var j = css.indexOf('*/', i + 2);\n      // 如果没有正常的备注结束，则后面的部分全部跳过\n      if (j === -1) break;\n      // 直接将当前位置调到备注结尾，并且初始化状态\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) {\n        // 在圆括号里面，忽略\n      } else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _.trim(retCSS);\n}\n\nmodule.exports = parseStyle;\n","/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT = require('./default');\nvar parseStyle = require('./parser');\nvar _ = require('./util');\n\n\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS (options) {\n  options = shallowCopyObject(options || {});\n  options.whiteList = options.whiteList || DEFAULT.whiteList;\n  options.onAttr = options.onAttr || DEFAULT.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // 如果过滤后 value 为空则直接忽略\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nmodule.exports = FilterCSS;\n","/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = require(\"cssfilter\").FilterCSS;\nvar getDefaultCSSWhiteList = require(\"cssfilter\").getDefaultWhiteList;\nvar _ = require(\"./util\");\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\"],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\"],\n    ins: [\"datetime\"],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    sup: [],\n    strong: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\", \"height\", \"width\"]\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value.substr(0, 11) === \"data:image/\" ||\n        value.substr(0, 6) === \"ftp://\" ||\n        value.substr(0, 2) === \"./\" ||\n        value.substr(0, 3) === \"../\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 = /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 = /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape doube quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function() {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function(tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function(html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _.forEach(removeList, function(pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    }\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  return html.replace(STRIP_COMMENT_TAG_REGEXP, \"\");\n}\nvar STRIP_COMMENT_TAG_REGEXP = /<!--[\\s\\S]*?-->/g;\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function(char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\nexports.whiteList = getDefaultWhiteList();\nexports.getDefaultWhiteList = getDefaultWhiteList;\nexports.onTag = onTag;\nexports.onIgnoreTag = onIgnoreTag;\nexports.onTagAttr = onTagAttr;\nexports.onIgnoreTagAttr = onIgnoreTagAttr;\nexports.safeAttrValue = safeAttrValue;\nexports.escapeHtml = escapeHtml;\nexports.escapeQuote = escapeQuote;\nexports.unescapeQuote = unescapeQuote;\nexports.escapeHtmlEntities = escapeHtmlEntities;\nexports.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\nexports.clearNonPrintableCharacter = clearNonPrintableCharacter;\nexports.friendlyAttrValue = friendlyAttrValue;\nexports.escapeAttrValue = escapeAttrValue;\nexports.onIgnoreTagStripAll = onIgnoreTagStripAll;\nexports.StripTagBody = StripTagBody;\nexports.stripCommentTag = stripCommentTag;\nexports.stripBlankChar = stripBlankChar;\nexports.cssFilter = defaultCSSFilter;\nexports.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n","module.exports = {\n  indexOf: function(arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function(arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function(str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function(str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  }\n};\n"],"sourceRoot":""}